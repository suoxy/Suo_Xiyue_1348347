// Xiyue Suo, NUID: 001348347
// INFO5100, Assignment_2

package Interface;

import Info.Car;
import Info.Fleet;
import java.awt.CardLayout;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.PriorityQueue;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 * This class shows the cars in the table and allow user to do further search.
 * @author suoxiyue
 */
public class ManageFleetJPanel extends javax.swing.JPanel {

    private JPanel botCard;
    private Fleet fleet;
    private ArrayList<Car> tempList;
    /**
     * Creates new form ManageFleetJPanel
     */
    ManageFleetJPanel(JPanel botCard, Fleet fleet) {
        initComponents();
        this.botCard = botCard;
        this.fleet = fleet;
        populateTable();
        showTime();
        btnSearchFromResult.setEnabled(false);
    }
    
    ManageFleetJPanel(JPanel botCard, ArrayList<Car> tempList) {
        initComponents();
        this.botCard = botCard;
        this.tempList = tempList;
        searchTable();
        btnSearchFromResult.setEnabled(true);
        addCombo();
        Date time = new Date();
        DateFormat dateFormat = new SimpleDateFormat("MM/dd/yyyy hh:mm:ss");
        String strDate = dateFormat.format(time);
        txtUpdatedAt.setText(strDate);             
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblFleet = new javax.swing.JTable();
        btnSearchBySerialNum = new javax.swing.JButton();
        btnViewDetails = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        txtSerialNum = new javax.swing.JTextField();
        btnBack = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        txtUpdatedAt = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txtTotalCars = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtMinSeat = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtMaxSeat = new javax.swing.JTextField();
        btnFindWithSeat = new javax.swing.JButton();
        comboManufac = new javax.swing.JComboBox<>();
        comboCity = new javax.swing.JComboBox<>();
        comboYear = new javax.swing.JComboBox<>();
        comboSeat = new javax.swing.JComboBox<>();
        btnSearchFromResult = new javax.swing.JButton();

        tblFleet.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Manufacturer", "City", "Model#", "Seat#", "Year", "Serial#", "Expired", "Availabilty", "Updated"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblFleet);
        if (tblFleet.getColumnModel().getColumnCount() > 0) {
            tblFleet.getColumnModel().getColumn(0).setResizable(false);
            tblFleet.getColumnModel().getColumn(1).setResizable(false);
            tblFleet.getColumnModel().getColumn(2).setResizable(false);
            tblFleet.getColumnModel().getColumn(3).setResizable(false);
            tblFleet.getColumnModel().getColumn(4).setResizable(false);
            tblFleet.getColumnModel().getColumn(5).setResizable(false);
            tblFleet.getColumnModel().getColumn(6).setResizable(false);
            tblFleet.getColumnModel().getColumn(7).setResizable(false);
            tblFleet.getColumnModel().getColumn(8).setResizable(false);
        }

        btnSearchBySerialNum.setText("Search by S#");
        btnSearchBySerialNum.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchBySerialNumActionPerformed(evt);
            }
        });

        btnViewDetails.setText("View Details / Update");
        btnViewDetails.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewDetailsActionPerformed(evt);
            }
        });

        btnDelete.setText("Delete");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        txtSerialNum.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSerialNumActionPerformed(evt);
            }
        });

        btnBack.setText("< Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        jLabel1.setText("Fleet Updated Time:");

        txtUpdatedAt.setEditable(false);
        txtUpdatedAt.setToolTipText("");
        txtUpdatedAt.setEnabled(false);

        jLabel2.setText("Total cars:");

        txtTotalCars.setEnabled(false);

        jLabel3.setText("Min. Seat");

        jLabel4.setText("Max. Seat");

        btnFindWithSeat.setText("Find One From Fleet");
        btnFindWithSeat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFindWithSeatActionPerformed(evt);
            }
        });

        comboManufac.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Manufacturer" }));

        comboCity.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "City" }));

        comboYear.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Year" }));

        comboSeat.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seat" }));

        btnSearchFromResult.setText("Search From Result");
        btnSearchFromResult.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchFromResultActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtTotalCars, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(31, 31, 31))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnBack)
                                .addGap(286, 286, 286)
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtUpdatedAt, javax.swing.GroupLayout.PREFERRED_SIZE, 216, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(layout.createSequentialGroup()
                                    .addGap(53, 53, 53)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(btnViewDetails, javax.swing.GroupLayout.DEFAULT_SIZE, 183, Short.MAX_VALUE)
                                        .addComponent(btnSearchBySerialNum, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(txtSerialNum, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addGroup(layout.createSequentialGroup()
                                                    .addGap(0, 0, Short.MAX_VALUE)
                                                    .addComponent(jLabel3)
                                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                    .addComponent(txtMinSeat, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                    .addComponent(jLabel4))
                                                .addGroup(layout.createSequentialGroup()
                                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addComponent(comboManufac, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addComponent(comboCity, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                        .addComponent(comboSeat, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addComponent(comboYear, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addGroup(layout.createSequentialGroup()
                                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                    .addComponent(txtMaxSeat, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                    .addComponent(btnFindWithSeat))
                                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                                    .addGap(26, 26, 26)
                                                    .addComponent(btnSearchFromResult, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                            .addGap(12, 12, 12))))
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 774, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap(13, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnBack, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1)
                    .addComponent(txtUpdatedAt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(txtTotalCars, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(5, 5, 5)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtSerialNum, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnSearchBySerialNum, javax.swing.GroupLayout.DEFAULT_SIZE, 38, Short.MAX_VALUE)))
                    .addComponent(btnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(17, 17, 17)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnViewDetails, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel3)
                        .addComponent(txtMinSeat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel4)
                        .addComponent(txtMaxSeat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnFindWithSeat)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(comboManufac, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(comboYear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(comboCity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(comboSeat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addComponent(btnSearchFromResult)))
                .addContainerGap(20, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents
    
    private void populateTable() {
        DefaultTableModel dtm = (DefaultTableModel) tblFleet.getModel();
        dtm.setRowCount(0);
        for (Car car: fleet.getCarList()) {
             Object[] row = new Object[9];
             row[0] = car;
             row[1] = car.getCity();
             row[2] = car.getModel();
             row[3] = car.getSeatNum();
             row[4] = car.getYear();
             row[5] = car.getSerialNumber();
             row[6] = car.getExpired();
             row[7] = car.getAvailability();
             row[8] = car.getCreatedOn();
             
             dtm.addRow(row);
        }
        txtTotalCars.setText(Integer.toString(fleet.getCarList().size()));
    }
    
    // shows the matched cars from previous search
    private void searchTable() {
        DefaultTableModel dtm = (DefaultTableModel) tblFleet.getModel();
        dtm.setRowCount(0);
        for (Car car: tempList) {
             Object[] row = new Object[9];
             row[0] = car;
             row[1] = car.getCity();
             row[2] = car.getModel();
             row[3] = car.getSeatNum();
             row[4] = car.getYear();
             row[5] = car.getSerialNumber();
             row[6] = car.getExpired();
             row[7] = car.getAvailability();
             row[8] = car.getCreatedOn();
             
             dtm.addRow(row);
        }
        txtTotalCars.setText(Integer.toString(tempList.size()));
    }
    
    // add elements to combo box from mathed result for secondary search
    private void addCombo() {
        ArrayList<String> manufacturers = new ArrayList<String>();
        ArrayList<String> years = new ArrayList<String>();
        ArrayList<String> cities = new ArrayList<String>();
        ArrayList<String> seats = new ArrayList<String>();
        for (Car car: tempList) {
            
            if (!manufacturers.contains(car.getModel())) {
                manufacturers.add(car.getManufacturer());
                comboManufac.addItem(car.getModel());
            }
            
            String yearFromResult = Integer.toString(car.getYear());
            if (!years.contains(yearFromResult)) {
                years.add(yearFromResult);
                comboYear.addItem(yearFromResult);
            }
            
            if (!cities.contains(car.getCity())) {
                cities.add(car.getCity());
                comboCity.addItem(car.getCity());
            }
            
            String seatFromResult = Integer.toString(car.getSeatNum());
            if (!seats.contains(seatFromResult)) {
                seats.add(seatFromResult);
                comboSeat.addItem(seatFromResult);
            }
        }
    }
    
    // allow user to search by serial number
    private void btnSearchBySerialNumActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchBySerialNumActionPerformed

        Car result = fleet.searchCar(Integer.parseInt(txtSerialNum.getText()));
        if (result == null) {
            JOptionPane.showConfirmDialog(null, "Serial number entered does not exist!", "Warning", JOptionPane.WARNING_MESSAGE);
        } else {
            ViewDetailsJPanel panel = new ViewDetailsJPanel(botCard, result);
            botCard.add("ViewDetailsJPanel", panel);
            CardLayout layout = (CardLayout) botCard.getLayout();
            layout.next(botCard);
        }
    }//GEN-LAST:event_btnSearchBySerialNumActionPerformed

    private void txtSerialNumActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSerialNumActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtSerialNumActionPerformed

    // go back to previous page
    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        botCard.remove(this);
        CardLayout layout = (CardLayout) botCard.getLayout();
        layout.previous(botCard);
        
    }//GEN-LAST:event_btnBackActionPerformed

    // will delete the selected car from the fleet
    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        // TODO add your handling code here:
        int selectedRow = tblFleet.getSelectedRow();
        if (selectedRow >= 0) {
            int dialogButton = JOptionPane.YES_NO_OPTION;
            int dialogResponse = JOptionPane.showConfirmDialog(null, "Delete this car's details?", "Warning", dialogButton);
            if (dialogResponse == JOptionPane.YES_OPTION) {
                Car car = (Car) tblFleet.getValueAt(selectedRow, 0);
                fleet.deleteCar(car);
                populateTable();
            }
        } else {
            JOptionPane.showMessageDialog(null, "Please select a row.", "Warning", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_btnDeleteActionPerformed

    // view the details of selected car in next page
    private void btnViewDetailsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewDetailsActionPerformed
        // TODO add your handling code here:
        int selectedRow = tblFleet.getSelectedRow();
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(null, "Please select a row.", "Warning", JOptionPane.WARNING_MESSAGE);
        } else {
            Car car = (Car) tblFleet.getValueAt(selectedRow, 0);
            ViewDetailsJPanel panel = new ViewDetailsJPanel(botCard, car);
            botCard.add("ViewDetailsJPanel", panel);
            CardLayout layout = (CardLayout) botCard.getLayout();
            layout.next(botCard); 
        }
    }//GEN-LAST:event_btnViewDetailsActionPerformed

    // allow user to find the first car within sepecific seats range
    private void btnFindWithSeatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFindWithSeatActionPerformed
        // TODO add your
        int min = Integer.parseInt(txtMinSeat.getText());
        int max = Integer.parseInt(txtMaxSeat.getText());
        boolean found = false;
        for (Car car: fleet.getCarList()) {
            int seat = car.getSeatNum();
            String avai = car.getAvailability();
            if (seat <= max && seat >= min && avai == "Available") {
                ViewDetailsJPanel panel = new ViewDetailsJPanel(botCard, car);
                botCard.add("ViewDetailsJPanel", panel);
                CardLayout layout = (CardLayout) botCard.getLayout();
                layout.next(botCard);
                found = true;
                break;
            }
        }
        if (!found) {
            JOptionPane.showMessageDialog(null, "No car with " + min + " to " + max + " seats found.");
        } 
    }//GEN-LAST:event_btnFindWithSeatActionPerformed

    private void btnSearchFromResultActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchFromResultActionPerformed
        // TODO add your handling code here:
        String manufac = comboManufac.getSelectedItem().toString();
        String seat = comboSeat.getSelectedItem().toString();
        String year = comboYear.getSelectedItem().toString();
        String city = comboCity.getSelectedItem().toString();
        
        ArrayList<Car> secondaryList = new ArrayList<Car>();
        for (Car car: tempList) {
                if (car.getManufacturer() == manufac) {
                    secondaryList.add(car);
                } 
                if ((Integer.toString(car.getSeatNum())).equals(seat)) {
                    secondaryList.add(car);
                }
                if ((Integer.toString(car.getYear())).equals(year)) {
                    secondaryList.add(car);
                } 
                if (car.getCity() == city) {
                    secondaryList.add(car);
                }
        }     
        
        SecondarySearchJPanel panel = new SecondarySearchJPanel(botCard, secondaryList);
        botCard.add("SecondarySearchJPanel", panel);
        CardLayout layout = (CardLayout) botCard.getLayout();
        layout.next(botCard);
    }//GEN-LAST:event_btnSearchFromResultActionPerformed

    // show the fleet updated time as text
    public void showTime() {
        PriorityQueue<Date> dates = new PriorityQueue<Date>();
        for (Car car: fleet.getCarList()) {          
            Date date = car.getCreatedOn();
            dates.add(date);
        }
        Date latest = dates.peek();
        DateFormat dateFormat = new SimpleDateFormat("MM/dd/yyyy hh:mm:ss");
        String strDate = dateFormat.format(latest);
        txtUpdatedAt.setText(strDate);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnFindWithSeat;
    private javax.swing.JButton btnSearchBySerialNum;
    private javax.swing.JButton btnSearchFromResult;
    private javax.swing.JButton btnViewDetails;
    private javax.swing.JComboBox<String> comboCity;
    private javax.swing.JComboBox<String> comboManufac;
    private javax.swing.JComboBox<String> comboSeat;
    private javax.swing.JComboBox<String> comboYear;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblFleet;
    private javax.swing.JTextField txtMaxSeat;
    private javax.swing.JTextField txtMinSeat;
    private javax.swing.JTextField txtSerialNum;
    private javax.swing.JTextField txtTotalCars;
    private javax.swing.JTextField txtUpdatedAt;
    // End of variables declaration//GEN-END:variables
}
