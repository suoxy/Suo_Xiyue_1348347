// Xiyue Suo, NUID: 001348347
// INFO5100, Assignment_2

package Interface;

import Info.Car;
import Info.Fleet;
import java.awt.CardLayout;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.JPanel;

/**
 * This class create the first layer of the panel, with search buttons.
 * @author suoxiyue
 */
public class EnterJPanel extends javax.swing.JPanel {

    private JPanel botCard;
    private Fleet fleet;
    
    /**
     * Creates new form enterJPanel
     */
    EnterJPanel(JPanel botCard, Fleet fleet) {
        initComponents();
        this.botCard = botCard;
        this.fleet = fleet;
        addCombo();
        
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnAddOneCar = new javax.swing.JButton();
        btnManageFleet = new javax.swing.JButton();
        btnFirstAvailable = new javax.swing.JButton();
        btnAllManufacturers = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        btnSearch = new javax.swing.JButton();
        comboAvailability = new javax.swing.JComboBox<>();
        comboModel = new javax.swing.JComboBox<>();
        comboYear = new javax.swing.JComboBox<>();
        comboCity = new javax.swing.JComboBox<>();
        btnAllExpired = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(153, 153, 0));
        setEnabled(false);

        btnAddOneCar.setText("Add One Car");
        btnAddOneCar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddOneCarActionPerformed(evt);
            }
        });

        btnManageFleet.setText("Manage Fleet");
        btnManageFleet.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnManageFleetActionPerformed(evt);
            }
        });

        btnFirstAvailable.setText("First Available Car");
        btnFirstAvailable.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFirstAvailableActionPerformed(evt);
            }
        });

        btnAllManufacturers.setText("All Manufacturers");
        btnAllManufacturers.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAllManufacturersActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Malayalam MN", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(51, 51, 51));
        jLabel1.setText("Find match car(s):");

        btnSearch.setText("Search");
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });

        comboAvailability.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Availabilty", "Available", "Non-available" }));
        comboAvailability.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboAvailabilityActionPerformed(evt);
            }
        });

        comboModel.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "All Model" }));
        comboModel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboModelActionPerformed(evt);
            }
        });

        comboYear.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "All Year" }));

        comboCity.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Available at (city): " }));

        btnAllExpired.setText("All Expired Certificates");
        btnAllExpired.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAllExpiredActionPerformed(evt);
            }
        });

        jLabel2.setText("OR");

        jLabel3.setText("OR");

        jLabel4.setText("OR");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnAddOneCar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnManageFleet, javax.swing.GroupLayout.DEFAULT_SIZE, 170, Short.MAX_VALUE))
                .addGap(107, 107, 107)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnFirstAvailable, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnAllManufacturers, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnAllExpired, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(39, 39, 39)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(comboAvailability, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel4))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(comboModel, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(comboCity, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(comboYear, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addContainerGap(75, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(50, 50, 50))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(69, 69, 69)
                        .addComponent(btnAddOneCar, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addComponent(btnFirstAvailable, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(comboAvailability, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(btnAllManufacturers, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(22, 22, 22)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnManageFleet, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnAllExpired, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(comboModel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(comboYear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(comboCity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4))))
                .addGap(18, 18, 18)
                .addComponent(btnSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(46, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    // Add choices to the combo box.
    private void addCombo() {
        ArrayList<String> models = new ArrayList<String>();
        ArrayList<String> years = new ArrayList<String>();
        ArrayList<String> cities = new ArrayList<String>();
        for (Car car: fleet.getCarList()) {
            
            if (!models.contains(car.getModel())) {
                models.add(car.getModel());
                comboModel.addItem(car.getModel());
            }
            
            String yearFromFleet = Integer.toString(car.getYear());
            if (!years.contains(yearFromFleet)) {
                years.add(yearFromFleet);
                comboYear.addItem(yearFromFleet);
            }
            
            if (car.getAvailability() == "Available" && !cities.contains(car.getCity())) {
                cities.add(car.getCity());
                comboCity.addItem(car.getCity());
            }
        }
    }
    
    // lead to the create car screen
    private void btnAddOneCarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddOneCarActionPerformed
        AddOneCarJPanel panel = new AddOneCarJPanel(botCard, fleet);
        botCard.add("AddOneCarJPanel", panel);
        CardLayout layout = (CardLayout) botCard.getLayout();
        layout.next(botCard);
    }//GEN-LAST:event_btnAddOneCarActionPerformed

    // will go to the manage screen, with car information showed
    private void btnManageFleetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnManageFleetActionPerformed

        ManageFleetJPanel panel = new ManageFleetJPanel(botCard, fleet);
        botCard.add("ManageFleetJPanel", panel);
        CardLayout layout = (CardLayout) botCard.getLayout();
        layout.next(botCard);
    }//GEN-LAST:event_btnManageFleetActionPerformed

    // will show the first available car in the pop up
    private void btnFirstAvailableActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFirstAvailableActionPerformed

        for (Car car: fleet.getCarList()) {
            if (car.getAvailability() == "Available") {
                JOptionPane.showMessageDialog(null, "Here is the first car available: "
                        + car.getYear() + " " + car.getManufacturer()  + " " + car.getModel() );
                break;
            }
        }
    }//GEN-LAST:event_btnFirstAvailableActionPerformed

    // will show all brands used in this application
    private void btnAllManufacturersActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAllManufacturersActionPerformed
      
        String allManu = "";
        for (Car car: fleet.getCarList()) {
            String manu = car.getManufacturer();
            if (!allManu.contains(manu)) {
                allManu = allManu + " " + manu;
            }
        }
        JOptionPane.showMessageDialog(null, "All manufacturers used by Uber 2.0: " + allManu);
    }//GEN-LAST:event_btnAllManufacturersActionPerformed

    private void comboAvailabilityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboAvailabilityActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_comboAvailabilityActionPerformed

    private void comboModelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboModelActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_comboModelActionPerformed

    // allow user to search specific cars with filters
    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchActionPerformed
        String availability = comboAvailability.getSelectedItem().toString();
        String model = comboModel.getSelectedItem().toString();
        String year = comboYear.getSelectedItem().toString();
        String city = comboCity.getSelectedItem().toString();
        
        ArrayList<Car> tempList = new ArrayList<Car>();
        for (Car car: fleet.getCarList()) {
            
            if (car.getModel() == model) {
                tempList.add(car);
            } 
            
            if (car.getAvailability() == availability) {
                tempList.add(car);
            }
            
            if ((Integer.toString(car.getYear())).equals(year)) {
                System.out.println("add " + year);
                tempList.add(car);
            } 
                
            if (car.getAvailability() == "Available" && car.getCity() == city) {
                tempList.add(car);
            }
        }     
        
        ManageFleetJPanel panel = new ManageFleetJPanel(botCard, tempList);
        botCard.add("ManageFleetJPanel", panel);
        CardLayout layout = (CardLayout) botCard.getLayout();
        layout.next(botCard);
        
    }//GEN-LAST:event_btnSearchActionPerformed

    // show all cars with expired certificate in the table.
    private void btnAllExpiredActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAllExpiredActionPerformed
        ArrayList<Car> tempList = new ArrayList<Car>();
        for (Car car: fleet.getCarList()) {
            if (car.getExpired()== "Yes") {
                tempList.add(car);
            }
        }
        ManageFleetJPanel panel = new ManageFleetJPanel(botCard, tempList);
        botCard.add("ManageFleetJPanel", panel);
        CardLayout layout = (CardLayout) botCard.getLayout();
        layout.next(botCard);
    }//GEN-LAST:event_btnAllExpiredActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddOneCar;
    private javax.swing.JButton btnAllExpired;
    private javax.swing.JButton btnAllManufacturers;
    private javax.swing.JButton btnFirstAvailable;
    private javax.swing.JButton btnManageFleet;
    private javax.swing.JButton btnSearch;
    private javax.swing.JComboBox<String> comboAvailability;
    private javax.swing.JComboBox<String> comboCity;
    private javax.swing.JComboBox<String> comboModel;
    private javax.swing.JComboBox<String> comboYear;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    // End of variables declaration//GEN-END:variables
}
